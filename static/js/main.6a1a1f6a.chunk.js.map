{"version":3,"sources":["common/Theme.ts","storage/http.ts","storage/localStorage.ts","svg/vk.svg","components/DayListItem.tsx","components/DayComponent.tsx","components/Timetable.tsx","components/NewStatisticGraphic.ts","components/Statistic.tsx","components/LoginPage.tsx","components/ChangePassPage.tsx","components/MainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","Http","url","process","year","month","fetch","this","method","headers","body","JSON","stringify","day","number","time","comment","cost","password","token","LocalStorage","data","parse","localStorage","getItem","save","setItem","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref","svgRef","title","props","enableBackground","height","viewBox","width","ref","ForwardRef","forwardRef","http","DayListItem","handleUpdateRecord","updateRecord","dayNumber","state","then","res","json","result","updateRecords","setState","inputTime","inputComment","inputCost","handleChangeInputGrid","gridName","timeForm","onSubmit","evt","preventDefault","TextField","autoFocus","value","onChange","type","style","marginLeft","commentForm","fullWidth","Number","handleChangeInputCost","Grid","container","direction","justify","alignItems","borderTop","className","item","xs","sm","paddingLeft","onClick","display","marginTop","includes","replace","maxWidth","IconButton","Sync","Fab","color","position","bottom","isMobile","right","zIndex","Cancel","React","Component","getWeekDay","date","getDay","DayComponent","dayListItemData","undefined","recordsInDay","push","Date","selectedDate","split","toString","dayMoneySum","forEach","Chip","margin","marginBottom","variant","label","Typography","map","Math","random","moment","require","Timetable","format","uploadedRecords","loading","handleChangeMonth","String","downloadRecords","getRecordsByDate","addData","items","getToken","authToken","setConfirmed","getData","isConfirmed","daysInMonth","recordsInMonth","startNumber","Paper","padding","toLocaleDateString","FormControl","InputLabel","any","Select","ListSubheader","MenuItem","NativeSelect","recordInDay","CircularProgress","NewStatisticGraphic","monthName","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","lineTension","borderCapStyle","borderDashOffset","borderDash","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointHitRadius","pointRadius","Statistic","selectedMonth","getUTCMonth","october","november","december","jan","feb","mar","uploadRecordsInMonthByMonthNumber","monthNumber","a","Promise","resolve","reject","uploadRecords","uploadOctober","uploadNovember","uploadDecember","uploadJanuary","uploadFebruary","uploadMarch","all","values","prevProps","prevState","snapshot","recordsInOctober","recordsInNovember","recordsInDecember","recordsInJan","recordsInFeb","recordsInMar","labelsForGraphic","totalOctoberSum","totalNovemberSum","totalDecemberSum","totalJanSum","totalFebSum","totalMarSum","octoberData","novemberData","decemberData","janData","febData","marData","labels","datasets","LoginPage","ls","useState","pass","setPass","error","setError","connectionError","setConnectionError","event","auth","setToken","catch","e","fontSize","placeholder","ChangePassPage","newPass","setNewPass","confirmPass","setConfirmPass","success","setSuccess","Button","disabled","setPassword","console","log","useStyles","makeStyles","createStyles","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","flexGrow","contentShift","MainPage","open","setOpen","confirmed","handleDrawerChange","classes","MuiThemeProvider","AppBar","clsx","Toolbar","aria-label","edge","Icon","noWrap","Drawer","anchor","paper","Divider","List","to","activeStyle","fontWeight","ListItem","button","ListItemIcon","ListItemText","primary","Container","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a1a1f6a.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    \"palette\": {\n        \"common\": {\n            \"black\": \"#000\",\n            \"white\": \"#fff\"\n        },\n        \"background\": {\n            \"paper\": \"rgba(255, 255, 255, 1)\",\n            \"default\": \"#fafafa\"\n        },\n        \"primary\": {\n            \"light\": \"#40c4ff\",\n            \"main\": \"rgb(122,117,160)\",\n            \"dark\": \"rgba(74, 144, 226, 1)\",\n            \"contrastText\": \"#fbfdff\"\n        },\n        \"secondary\": {\n            \"light\": \"#4ffcff\",\n            \"main\": \"#ba68c8\",\n            \"dark\": \"#22c5bb\",\n            \"contrastText\": \"#fff\"\n        },\n        \"error\": {\n            \"light\": \"#e52519\",\n            \"main\": \"#f42740\",\n            \"dark\": \"#8d0600\",\n            \"contrastText\": \"#fff\"\n        },\n        \"text\": {\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\n            \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\n            \"hint\": \"rgba(0, 0, 0, 0.38)\"\n        }\n    }\n});\n","\nexport default class Http {\n\n    public url = process.env.NODE_ENV === \"development\" ? process.env.REACT_APP_DEVELOPMENT_URL : process.env.REACT_APP_PUBLIC_URL;\n\n    public getRecordsByDate(year: string, month: string) {\n        return fetch(this.url + '/getRecordsByDate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({year, month})\n        });\n    }\n\n    public updateRecord(year: string, month: string, day: number, number: number, time: string, comment: string, cost: number) {\n        return fetch(this.url + '/updateRecord', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({year, month, day, number, time, comment, cost})\n        });\n    }\n\n    public auth(password: string) {\n        return fetch(this.url + '/auth', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({password})\n        });\n    }\n\n    public authToken (token: string) {\n        return fetch(this.url + '/authToken', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        });\n    }\n\n    public setPassword(password: string) {\n        return fetch(this.url + '/setPassword', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({password})\n        });\n    }\n}\n","export class LocalStorage {\n    public data:any;\n    public token:any;\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        this.data = JSON.parse(localStorage.getItem('data') as string);\n        this.token = JSON.parse(localStorage.getItem('pass') as string);\n    }\n\n    addData(data:any) {\n        this.data = data;\n        this.save();\n    }\n\n    getData() {\n        return(localStorage.getItem('data'))\n    }\n\n    save() {\n        localStorage.setItem('data', JSON.stringify(this.data));\n    }\n\n    getToken() {\n        return (localStorage.getItem('token'))\n    }\n\n    setToken(token: string) {\n        localStorage.setItem('token', token);\n    }\n\n\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m19.915 13.028c-.388-.49-.277-.708 0-1.146.005-.005 3.208-4.431 3.538-5.932l.002-.001c.164-.547 0-.949-.793-.949h-2.624c-.668 0-.976.345-1.141.731 0 0-1.336 3.198-3.226 5.271-.61.599-.892.791-1.225.791-.164 0-.419-.192-.419-.739v-5.105c0-.656-.187-.949-.74-.949h-4.126c-.419 0-.668.306-.668.591 0 .622.945.765 1.043 2.515v3.797c0 .832-.151.985-.486.985-.892 0-3.057-3.211-4.34-6.886-.259-.713-.512-1.001-1.185-1.001h-2.625c-.749 0-.9.345-.9.731 0 .682.892 4.073 4.148 8.553 2.17 3.058 5.226 4.715 8.006 4.715 1.671 0 1.875-.368 1.875-1.001 0-2.922-.151-3.198.686-3.198.388 0 1.056.192 2.616 1.667 1.783 1.749 2.076 2.532 3.074 2.532h2.624c.748 0 1.127-.368.909-1.094-.499-1.527-3.871-4.668-4.023-4.878z\",\n  fill: \"#4b729f\"\n});\n\nvar SvgVk = function SvgVk(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    height: 512,\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgVk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/vk.9eaa3aa7.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport {Fab, Grid, IconButton, TextField} from \"@material-ui/core\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport {Cancel, Sync} from \"@material-ui/icons\";\nimport isMobile from \"ismobilejs\";\nimport Http from \"../storage/http\";\nimport {ReactComponent as VkIcon} from '../svg/vk.svg';\n\ninterface DayListItemProps {\n    year: string\n    time: string\n    comment: string\n    cost: number\n    dayNumber: number\n    number: number\n    updateRecords: (items: any) => void\n    month: string\n}\n\ninterface DayListItemState {\n    time: string\n    comment: string\n    cost: number\n    inputTime: boolean\n    inputComment: boolean\n    inputCost: boolean\n}\n\nconst http = new Http();\n\nexport class DayListItem extends React.Component <DayListItemProps, DayListItemState> {\n\n    constructor(props: DayListItemProps) {\n        super(props);\n        this.state = {\n            time: props.time,\n            comment: props.comment,\n            cost: props.cost,\n            inputTime: false,\n            inputComment: false,\n            inputCost: false\n        }\n    }\n\n    public handleUpdateRecord = () => {\n        http.updateRecord(this.props.year, this.props.month, this.props.dayNumber, this.props.number, this.state.time, this.state.comment, this.state.cost)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.props.updateRecords(result);\n                    this.setState({\n                        inputTime: false,\n                        inputComment: false,\n                        inputCost: false\n                    });\n                }\n            )\n    };\n\n    public handleChangeInputGrid = (gridName: 'time' | 'comment' | 'cost') => {\n        if (gridName === 'time') {\n            this.setState({\n                inputTime: true\n            })\n        } else if (gridName === 'comment') {\n            this.setState({\n                inputComment: true\n            })\n        } else if (gridName === 'cost') {\n            this.setState({\n                inputCost: true\n            })\n        }\n    };\n\n    public render() {\n\n        const timeForm = (<form onSubmit={(evt) => {\n            evt.preventDefault();\n            this.handleUpdateRecord()\n        }}>\n            <TextField autoFocus={true}\n                       value={this.state.time}\n                       onChange={(evt) => this.setState({time: evt.target.value})}\n                       type={\"time\"}\n                       style={{marginLeft: '1rem', width: '70%'}}\n            />\n        </form>);\n\n        const handleChangeInputTime = () => this.handleChangeInputGrid('time');\n\n\n        const commentForm = (\n            <form onSubmit={(evt) => {\n                evt.preventDefault();\n                this.handleUpdateRecord()\n            }}>\n                <TextField autoFocus={true} value={this.state.comment}\n                           onChange={(evt) => this.setState({comment: evt.target.value})}\n                           fullWidth={true}/>\n            </form>\n        );\n\n        const handleChangeInputComment = () => this.handleChangeInputGrid('comment');\n\n        const inputCost = (\n            <form onSubmit={(evt) => {\n                evt.preventDefault();\n                this.handleUpdateRecord()\n            }}>\n                <TextField autoFocus={true} value={this.state.cost}\n                           onChange={(evt) => this.setState({cost: Number(evt.target.value)})}\n                           fullWidth={true}/>\n            </form>\n        );\n\n        const handleChangeInputCost = () => this.handleChangeInputGrid('cost');\n\n        const GetIconByComment = () => {\n            if (this.state.comment.includes('inst')) {\n                return (<InstagramIcon className=\"icon instagramIcon\"/>)\n            } else if (this.state.comment.includes('whats')) {\n                return (<WhatsAppIcon className=\"icon whatsAppIcon\"/>)\n            } else if (this.state.comment.includes('vk')) {\n                return (<VkIcon className=\"icon vkIcon\"/>)\n            }\n            return null\n        };\n\n        return (\n            <Grid container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                  style={{borderTop: '1px solid #e0e0e0'}}\n                  className=\"border\"\n            >\n                <Grid className=\"border itemGrid\" item xs={3} sm={1} style={{paddingLeft: 5}}\n                      onClick={handleChangeInputTime}>\n                    {this.state.inputTime ? timeForm :\n                        <div style={{display: 'flex'}}>\n                            <span className=\"dayText\" style={{marginTop: 5}}>{this.state.time}</span>\n                            <GetIconByComment/>\n                        </div>\n                    }\n                </Grid>\n\n                <Grid className=\"border itemGrid\" item xs={6} sm={8} onClick={handleChangeInputComment} style={{\n\n                }}>\n                    {this.state.inputComment ? commentForm :\n                        <span className=\"dayText\">\n                        {this.state.comment.replace('inst', '').replace('vk', '').replace('whats', '')}\n                    </span>\n                    }\n                </Grid>\n                {this.state.cost === 0 ?\n                    <Grid className=\"border itemGrid\" item xs={1} sm={2} onClick={handleChangeInputCost}>\n                        {this.state.inputCost ? inputCost : null}\n                    </Grid> :\n                    <Grid className=\"border itemGrid\" item xs={1} sm={2} onClick={handleChangeInputCost}>\n                        {this.state.inputCost ? inputCost : <span className=\"dayText\">{this.state.cost}</span>}\n                    </Grid>}\n\n                <Grid item xs={1} sm={1} className=\"border\" style={{width: 36, maxWidth: 36, marginLeft: 'auto'}}>\n                    <IconButton style={{paddingLeft: 0}} onClick={() => this.handleUpdateRecord()}>\n                        <Sync/>\n                    </IconButton>\n                </Grid>\n\n\n                {/* кнопка очистки времени */}\n                {this.state.inputTime ?\n                    <Fab color=\"secondary\" style={{\n                        position: 'fixed',\n                        bottom: `${isMobile() ? '300px' : '15px'}`,\n                        right: 15,\n                        zIndex: 1000\n                    }}\n                         onClick={() => {\n                             this.setState({\n                                 time: ''\n                             }, () => {\n                                 this.handleUpdateRecord()\n                             });\n                         }}>\n                        <Cancel/>\n                    </Fab> : null}\n            </Grid>\n        )\n    }\n}\n","import React from 'react';\nimport {Chip, Typography} from \"@material-ui/core\";\nimport {RecordItemData, RecordsInDay} from \"../common/interfaces\";\nimport {DayListItem} from \"./DayListItem\";\n\ninterface DayListComponentProps {\n    recordsInDay: RecordsInDay\n    selectedDate: string\n    dayNumber: number\n    updateRecords: (items: any) => void\n}\n\nconst getWeekDay = (date: Date) => {\n    const days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\n    const day = date.getDay();\n    return days[day];\n};\n\nexport const DayComponent = (props: DayListComponentProps) => {\n    const dayListItemData: RecordItemData[] = [];\n    if (props.recordsInDay !== undefined) {\n        dayListItemData.push(props.recordsInDay[\"1\"], props.recordsInDay[\"2\"], props.recordsInDay[\"3\"], props.recordsInDay[\"4\"])\n    }\n    const date = new Date(\n        props.selectedDate.split('-')[0]\n        + '-' +\n        `${props.selectedDate.split('-')[1].length === 1 ? '0' + props.selectedDate.split('-')[1] : props.selectedDate.split('-')[1]}` +\n        '-' +\n        `${props.dayNumber.toString().length === 1 ? '0' + props.dayNumber.toString() : props.dayNumber}`\n    );\n\n    let dayMoneySum = 0; // сумма заработанного за день\n\n    dayListItemData.forEach(item => {\n        dayMoneySum += Number(item.cost)\n    });\n\n    return (\n        <div className=\"DayComponentContainer\" key={props.dayNumber}>\n            <Chip style={{width: '95%', margin: 'auto', marginTop: 20, marginBottom: 20}} variant=\"outlined\" color=\"primary\" label={\n                <Typography variant={\"h6\"}>\n                    {props.dayNumber}.{props.selectedDate.split('-')[1]}, {getWeekDay(date)}.\n                     &nbsp; {dayMoneySum > 0 ? `Всего: ${dayMoneySum}` : null}\n                </Typography>}\n            />\n            {dayListItemData.map((data) => {\n                return (\n                    <DayListItem\n                        year={props.selectedDate.split('-')[0]}\n                        updateRecords={props.updateRecords}\n                        month={props.selectedDate.split('-')[1]}\n                        dayNumber={props.dayNumber}\n                        number={dayListItemData.indexOf(data) + 1}\n                        key={Math.random()}\n                        time={data.time}\n                        comment={data.comment}\n                        cost={data.cost}\n                    />\n                )\n            })}\n        </div>\n    )\n};\n","import React from 'react';\nimport {\n    CircularProgress,\n    FormControl,\n    Grid,\n    InputLabel,\n    MenuItem,\n    NativeSelect,\n    Paper,\n    Select,\n    Typography\n} from \"@material-ui/core\";\nimport isMobile from 'ismobilejs';\nimport Http from \"../storage/http\";\nimport {RecordsInDay} from \"../common/interfaces\";\nimport {LocalStorage} from \"../storage/localStorage\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport {DayComponent} from \"./DayComponent\";\n\nconst http = new Http();\nconst localStorage = new LocalStorage();\nconst moment = require('moment');\n\ninterface TimetableState {\n    selectedDate: string\n    uploadedRecords: any | undefined // объект с полями-номерами дня, в каждом поле по 4 поля с записями\n    loading: boolean\n}\n\ninterface TimetableProps {\n    setConfirmed: (value: boolean) => void\n    isConfirmed: boolean\n}\n\nexport default class Timetable extends React.Component<TimetableProps, TimetableState> {\n\n    state = {\n        selectedDate: moment().format('YYYY-MM'),\n        uploadedRecords: {loading: true} as any,\n        loading: true\n    };\n\n    public handleChangeMonth = (evt: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        this.setState({\n            selectedDate: String(evt.target.value)\n        }, () => {\n            this.downloadRecords()\n        })\n    };\n\n    public downloadRecords = () => {\n        http.getRecordsByDate(this.state.selectedDate.split('-')[0], this.state.selectedDate.split('-')[1])\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        uploadedRecords: result,\n                        loading: false\n                    });\n                    localStorage.addData(result)\n                }\n            )\n    };\n\n    public updateRecords = (items: any) => {\n        this.setState({\n            uploadedRecords: items\n        })\n    };\n\n    componentDidMount(): void {\n        const token = localStorage.getToken();\n        if (process.env.NODE_ENV !== \"development\") {\n            if (token) {\n                http.authToken(token)\n                    .then(res => res.json())\n                    .then(result => {\n                        if (result) {\n                            this.props.setConfirmed(true)\n                        } else {\n                            this.props.setConfirmed(false)\n                        }\n                    })\n            } else {\n                this.props.setConfirmed(false)\n            }\n        }\n        if (localStorage.getData()) {\n            this.setState({\n                uploadedRecords: JSON.parse(localStorage.getData() as string)\n            });\n        }\n        if (this.props.isConfirmed) {\n            this.downloadRecords();\n        }\n    }\n\n    public render() {\n        const daysInMonth = moment(this.state.selectedDate + '-01').daysInMonth()\n        let recordsInMonth: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n        let startNumber = 1;\n        while (startNumber <= daysInMonth) {\n            if (this.state.uploadedRecords) {\n                recordsInMonth.push(this.state.uploadedRecords[startNumber]);\n                startNumber++\n            }\n        }\n        return (\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"stretch\"\n            >\n                {this.state.loading ? <div className=\"loadingMessage\">\n                    Данные обновляются\n                </div> : null}\n                <Paper style={{padding: '10px'}}>\n                    <Grid item xs={12} sm={12}>\n                        <Typography variant={\"h6\"}>\n                            Запись. Сегодня: {new Date().toLocaleDateString('ru')}\n                        </Typography>\n                    </Grid>\n                    <FormControl style={{marginTop: '1rem'}}>\n                        <InputLabel>Месяц</InputLabel>\n                        {/* Селектор для ПК */}\n                        {!isMobile().any ? <Select\n                            value={this.state.selectedDate}\n                            onChange={(evt) => this.handleChangeMonth(evt)}\n                            style={{width: '300px'}}\n                        >\n                            <ListSubheader onClick={(evt)=>evt.preventDefault()}>2019</ListSubheader>\n                            <MenuItem value={\"2019-10\"}>Октябрь</MenuItem>\n                            <MenuItem value={\"2019-11\"}>Ноябрь</MenuItem>\n                            <MenuItem value={\"2019-12\"}>Декабрь</MenuItem>\n                            <ListSubheader>2020</ListSubheader>\n                            <MenuItem value={\"2020-01\"}>Январь</MenuItem>\n                            <MenuItem value={\"2020-02\"}>Февраль</MenuItem>\n                            <MenuItem value={\"2020-03\"}>Март</MenuItem>\n                            <MenuItem value={\"2020-04\"}>Апрель</MenuItem>\n                            <MenuItem value={\"2020-05\"}>Май</MenuItem>\n                            <MenuItem value={\"2020-06\"}>Июнь</MenuItem>\n                        </Select> : null}\n                        {/* Селектор для телефонов */}\n                        {isMobile().any ? <NativeSelect\n                            value={this.state.selectedDate}\n                            onChange={(evt) => this.handleChangeMonth(evt)}\n                            style={{width: '320px'}}\n                        >\n                            <optgroup label=\"2019\">\n                                <option value={\"2019-10\"}>Октябрь</option>\n                                <option value={\"2019-11\"}>Ноябрь</option>\n                                <option value={\"2019-12\"}>Декабрь</option>\n                            </optgroup>\n                            <optgroup label=\"2020\">\n                                <option value={\"2020-01\"}>Январь</option>\n                                <option value={\"2020-02\"}>Февраль</option>\n                                <option value={\"2020-03\"}>Март</option>\n                                <option value={\"2020-04\"}>Апрель</option>\n                                <option value={\"2020-05\"}>Май</option>\n                                <option value={\"2020-06\"}>Июнь</option>\n                            </optgroup>\n                        </NativeSelect> : null}\n                    </FormControl>\n                </Paper>\n\n                <div style={{marginTop: '1rem'}}>\n                    {!this.state.uploadedRecords ? <CircularProgress/> : <>\n                        {recordsInMonth.map(recordInDay => {\n                            return (\n                                <DayComponent key={Math.random()}\n                                              dayNumber={recordsInMonth.indexOf(recordInDay) + 1}\n                                              selectedDate={this.state.selectedDate}\n                                              recordsInDay={recordInDay}\n                                              updateRecords={this.updateRecords}\n                                />\n                            )\n                        })}\n                    </>}\n                </div>\n            </Grid>\n        )\n    }\n}\n","export class NewStatisticGraphic {\n    private label: string;\n    private fill: boolean;\n    private lineTension: number;\n    private backgroundColor: any;\n    private borderColor: any;\n    private borderCapStyle: string;\n    private borderDashOffset: number;\n    private borderDash: any[];\n    private borderJoinStyle: string;\n    private pointBorderColor: any;\n    private pointBackgroundColor: string;\n    private pointBorderWidth: number;\n    private pointHoverRadius: number;\n    private pointHoverBackgroundColor: any;\n    private pointHoverBorderColor: any;\n    private pointHoverBorderWidth: number;\n    private pointHitRadius: number;\n    private pointRadius: number;\n    private data: any;\n    constructor(monthName: any, data: any, backgroundColor: any, borderColor: any, pointBorderColor: any, pointHoverBackgroundColor: any, pointHoverBorderColor: any) {\n        this.label = `Заработок за ${monthName}`;\n        this.fill = false;\n        this.lineTension = 0.1;\n        this.backgroundColor = backgroundColor;\n        this.borderColor = borderColor;\n        this.borderCapStyle = 'butt';\n        this.borderDash = [];\n        this.borderDashOffset = 0.0;\n        this.borderJoinStyle = 'miter';\n        this.pointBorderColor = pointBorderColor;\n        this.pointBackgroundColor = '#fff';\n        this.pointBorderWidth = 1;\n        this.pointHoverRadius = 5;\n        this.pointHoverBackgroundColor = pointHoverBackgroundColor;\n        this.pointHoverBorderColor = pointHoverBorderColor;\n        this.pointHoverBorderWidth = 2;\n        this.pointRadius = 1;\n        this.pointHitRadius = 10;\n        this.data = data\n    }\n}","import React from 'react';\nimport Http from \"../storage/http\";\nimport {RecordsInDay} from \"../common/interfaces\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport {Line} from 'react-chartjs-2';\nimport {NewStatisticGraphic} from \"./NewStatisticGraphic\";\n\nconst http = new Http();\n\ninterface StatisticProps {\n\n}\n\ninterface StatisticState {\n    selectedMonth: number,\n    loading: boolean,\n    october: RecordsInDay[],\n    november: RecordsInDay[],\n    december: RecordsInDay[],\n    jan: RecordsInDay[],\n    feb: RecordsInDay[],\n    mar: RecordsInDay[],\n}\n\nexport default class Statistic extends React.Component <StatisticProps, StatisticState> {\n\n    state = {\n        selectedMonth: new Date().getUTCMonth() + 1,\n        loading: true,\n        october: [],\n        november: [],\n        december: [],\n        jan: [],\n        feb: [],\n        mar: [],\n    };\n\n    public uploadRecordsInMonthByMonthNumber = async (year: string, monthNumber: string) => {\n        return new Promise (((resolve, reject) => {\n            http.getRecordsByDate(year, monthNumber)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        resolve(result)\n                    }\n                )\n        }))\n    };\n\n    public uploadRecords = () => {\n        const uploadOctober = new Promise ((resolve, reject) => {\n            resolve(this.uploadRecordsInMonthByMonthNumber('2019', '10'))\n        });\n        const uploadNovember = new Promise ((resolve, reject) => {\n            resolve(this.uploadRecordsInMonthByMonthNumber('2019', '11'))\n        });\n        const uploadDecember = new Promise ((resolve, reject) => {\n            resolve(this.uploadRecordsInMonthByMonthNumber('2019', '12'))\n        });\n        const uploadJanuary= new Promise ((resolve, reject) => {\n            resolve(this.uploadRecordsInMonthByMonthNumber('2020', '01'))\n        });\n        const uploadFebruary = new Promise ((resolve, reject) => {\n            resolve(this.uploadRecordsInMonthByMonthNumber('2020', '02'))\n        });\n        const uploadMarch= new Promise ((resolve, reject) => {\n            resolve(this.uploadRecordsInMonthByMonthNumber('2020', '03'))\n        });\n        Promise.all([uploadOctober, uploadNovember, uploadDecember, uploadJanuary, uploadFebruary, uploadMarch]).then(values => {\n            this.setState({\n                loading: false,\n                october: values[0] as any,\n                november: values[1] as any,\n                december: values[2] as any,\n                jan: values[3] as any,\n                feb: values[4] as any,\n                mar: values[5] as any\n            })\n        });\n    };\n\n    componentDidMount(): void {\n        this.uploadRecords()\n    }\n\n    componentDidUpdate(prevProps: Readonly<StatisticProps>, prevState: Readonly<StatisticState>, snapshot?: any): void {\n        if (prevState.selectedMonth !== this.state.selectedMonth) {\n            this.setState({\n                loading: false\n            }, () => {\n                this.uploadRecords()\n            })\n        }\n    }\n\n    public render() {\n        const recordsInOctober: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n        const recordsInNovember: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n        const recordsInDecember: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n        const recordsInJan: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n        const recordsInFeb: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n        const recordsInMar: RecordsInDay[] = []; // массив дней с записями в выбранном месяце\n\n        const labelsForGraphic: number[] = [];\n        let totalOctoberSum = 0;\n        let totalNovemberSum = 0;\n        let totalDecemberSum = 0;\n        let totalJanSum = 0;\n        let totalFebSum = 0;\n        let totalMarSum = 0;\n\n        recordsInOctober.forEach(data => {\n            if (data !== undefined) {\n                totalOctoberSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n\n        let octoberData: number[] = [];\n        let novemberData: number[] = [];\n        let decemberData: number[] = [];\n        let janData: number[] = [];\n        let febData: number[] = [];\n        let marData: number[] = [];\n\n        const daysInMonth = 31;\n        let startNumber = 1;\n\n        while (startNumber <= daysInMonth) {\n            recordsInOctober.push(this.state.october[startNumber]);\n            recordsInNovember.push(this.state.november[startNumber]);\n            recordsInDecember.push(this.state.december[startNumber]);\n            recordsInJan.push(this.state.jan[startNumber]);\n            recordsInFeb.push(this.state.feb[startNumber]);\n            recordsInMar.push(this.state.mar[startNumber]);\n\n            labelsForGraphic.push(startNumber);\n            startNumber++\n        }\n\n        recordsInOctober.forEach(data => {\n            if (data !== undefined) {\n                octoberData.push(data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost);\n                totalOctoberSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n\n        recordsInNovember.forEach(data => {\n            if (data !== undefined) {\n                novemberData.push(data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost);\n                totalNovemberSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n\n        recordsInDecember.forEach(data => {\n            if (data !== undefined) {\n                decemberData.push(data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost);\n                totalDecemberSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n        recordsInJan.forEach(data => {\n            if (data !== undefined) {\n                janData.push(data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost);\n                totalJanSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n        recordsInFeb.forEach(data => {\n            if (data !== undefined) {\n                febData.push(data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost);\n                totalFebSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n        recordsInMar.forEach(data => {\n            if (data !== undefined) {\n                marData.push(data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost);\n                totalMarSum += data[\"1\"].cost + data[\"2\"].cost + data[\"3\"].cost + data[\"4\"].cost\n            }\n        });\n\n        const data = {\n            labels: labelsForGraphic,\n            datasets: [\n               new NewStatisticGraphic(`Октябрь: ${totalOctoberSum}`,\n                   octoberData,\n                   'rgba(75,192,192,0.4)',\n                   'rgba(75,192,192,1)',\n                   'rgba(75,192,192,1)',\n                   'rgba(75,192,192,1)',\n                   'rgba(220,220,220,1)'),\n                new NewStatisticGraphic(`Ноябрь: ${totalNovemberSum}`,\n                    novemberData,\n                    'rgba(230,151,255,0.4)',\n                    'rgb(186,130,255)',\n                    'rgb(235,143,255)',\n                    'rgb(186,130,255)',\n                    'rgba(220,220,220,1)'),\n                new NewStatisticGraphic(`Декабрь ${totalDecemberSum}`,\n                    decemberData,\n                    'rgba(99,206,255,0.98)',\n                    'rgb(72,89,192)',\n                    'rgb(74,84,192)',\n                    'rgb(81,111,192)',\n                    'rgba(220,220,220,1)'),\n                new NewStatisticGraphic(`Январь ${totalJanSum}`,\n                    janData,\n                    'rgba(99,206,255,0.98)',\n                    'rgb(122,192,29)',\n                    'rgb(107,192,61)',\n                    'rgb(79,192,64)',\n                    'rgba(220,220,220,1)'),\n                new NewStatisticGraphic(`Февраль ${totalFebSum}`,\n                    febData,\n                    'rgba(99,206,255,0.98)',\n                    'rgb(33,192,186)',\n                    'rgb(53,192,129)',\n                    'rgb(63,181,192)',\n                    'rgba(220,220,220,1)'),\n                new NewStatisticGraphic(`Март ${totalMarSum}`,\n                    marData,\n                    'rgba(99,206,255,0.98)',\n                    'rgb(122,192,29)',\n                    'rgb(107,192,61)',\n                    'rgb(79,192,64)',\n                    'rgba(220,220,220,1)'),\n            ]\n        };\n        if (!this.state.loading) {\n            return (\n                    <Line data={data} height={350}/>\n            )\n        } else return <CircularProgress/>\n    }\n}\n","import React, {FormEvent, useState} from 'react';\nimport {TextField, Typography} from \"@material-ui/core\";\nimport Http from \"../storage/http\";\nimport {LocalStorage} from \"../storage/localStorage\";\n\ninterface LoginPageProps {\n    setConfirmed: (value: boolean) => void\n}\n\nexport const LoginPage = (props: LoginPageProps) => {\n    const http = new Http();\n    const ls = new LocalStorage();\n    const [pass, setPass] = useState('');\n    const [error, setError] = useState(false);\n    const [connectionError, setConnectionError] = useState(false);\n    const submit = (evt: FormEvent<HTMLFormElement>) => {\n        setError(false);\n        evt.preventDefault();\n        http.auth(pass)\n            .then(res => res.json())\n            .then((result) => {\n                if (typeof result === 'string') {\n                    ls.setToken(result);\n                    props.setConfirmed(true)\n                } else {\n                    setError(true)\n                }\n            })\n            .catch(e => {\n                setConnectionError(true)\n            })\n    };\n\n    return (\n        <div className=\"LoginPage_Container\">\n            <form className=\"LoginPage_BodyContainer\" onSubmit={event => submit(event)}>\n                <Typography variant=\"subtitle2\" className=\"LoginPage_Label\" style={{fontSize: '1.3rem'}}>Введите\n                    пароль</Typography>\n                <TextField error={error} variant={\"outlined\"} className=\"LoginPage_Input\" style={{marginLeft: '25px'}}\n                           placeholder=\"Пароль\" type=\"password\"\n                           onChange={(evt) => setPass(evt.target.value)}\n                />\n                {connectionError ?\n                    <Typography variant=\"subtitle2\" className=\"LoginPage_Label\">Ошибка соединения</Typography> : null}\n            </form>\n        </div>\n    )\n};\n","import React, {useState} from 'react';\nimport {Button, TextField, Typography} from \"@material-ui/core\";\nimport Http from \"../storage/http\";\nimport {LocalStorage} from \"../storage/localStorage\";\n\nexport const ChangePassPage = () => {\n\n    const [newPass, setNewPass] = useState('');\n    const [confirmPass, setConfirmPass] = useState('');\n    const [success, setSuccess] = useState(false);\n    const http = new Http();\n    const ls = new LocalStorage();\n\n\n    const savePassword = () => {\n        http.setPassword(newPass)\n            .then(res => res.json())\n            .then(result => {\n                if (typeof result === 'string') {\n                    ls.setToken(result);\n                    setSuccess(true)\n                }\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    };\n\n    return (<div>\n        <Typography>\n            Введите новый пароль\n        </Typography>\n        <div  style={{display: 'block'}}>\n        <TextField type=\"password\"  variant={\"outlined\"} fullWidth={true}\n               onChange={(evt) => setNewPass(evt.target.value)} value={newPass} label=\"Новый пароль\">\n\n        </TextField>\n        <TextField type=\"password\" variant={\"outlined\"} fullWidth={true} style={{marginTop: '1rem'}}\n               onChange={(evt) => setConfirmPass(evt.target.value)} value={confirmPass} label=\"Повтор нового пароля\">\n        </TextField>\n        </div>\n        <Button variant={\"outlined\"} disabled={newPass !== confirmPass} onClick={() => savePassword()} style={{marginTop: '1rem'}}>\n            Сохранить новый пароль\n        </Button>\n        {success ? <Typography>Пароль сохранен</Typography> : null}\n    </div>)\n}\n","import {Switch, Route, NavLink, Redirect} from 'react-router-dom'\nimport React, {useState} from 'react'\nimport {\n    AppBar,\n    Container,\n    createStyles, Divider, Drawer,\n    Icon, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles,\n    Theme,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from \"../common/Theme\";\nimport Timetable from \"./Timetable\";\nimport clsx from 'clsx';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Statistic from \"./Statistic\";\nimport {LoginPage} from \"./LoginPage\";\nimport {ChangePassPage} from \"./ChangePassPage\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        content: {\n            flexGrow: 1,\n            padding: 0,\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: -drawerWidth,\n        },\n        contentShift: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        },\n    }),\n);\n\nexport const MainPage = () => {\n    const [open, setOpen] = useState(false);\n    const [confirmed, setConfirmed] = useState(true);\n    const handleDrawerChange = () => {\n        setOpen(!open);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {confirmed ? (<Switch>\n                    <MuiThemeProvider theme={theme}>\n                        <div className={classes.root}>\n                            <AppBar\n                                position=\"fixed\"\n                                className={clsx(classes.appBar, {\n                                    [classes.appBarShift]: open,\n                                })}\n                            >\n                                <Toolbar>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        aria-label=\"open drawer\"\n                                        onClick={handleDrawerChange}\n                                        edge=\"start\"\n                                        className={clsx(classes.menuButton, open && classes.hide)}\n                                    >\n                                        <Icon>menu</Icon>\n                                    </IconButton>\n                                    <Typography variant=\"h6\" noWrap style={{fontSize: '1.2rem'}}>\n                                        Ноготочки\n                                    </Typography>\n                                    <Typography variant=\"h6\" noWrap\n                                                style={{marginLeft: 'auto', fontSize: '1.2rem'}}>\n                                        {new Date().toLocaleDateString('ru')}\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n\n                            <Drawer\n                                className={classes.drawer}\n                                variant=\"persistent\"\n                                anchor=\"left\"\n                                open={open}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                            >\n                                <div className={classes.drawerHeader}>\n                                    <IconButton onClick={handleDrawerChange}>\n                                        {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                                    </IconButton>\n                                </div>\n                                <Divider/>\n                                <List>\n                                    <NavLink to={'/blesk-nails'} style={{color: \"black\"}}\n                                             activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                        <ListItem button>\n                                            <ListItemIcon><Icon>event</Icon></ListItemIcon>\n                                            <ListItemText primary={\"Расписание\"}/>\n                                        </ListItem>\n                                    </NavLink>\n                                    <NavLink to={'/statistic'} style={{color: \"black\"}}\n                                             activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                        <ListItem button>\n                                            <ListItemIcon><Icon>trending_up</Icon></ListItemIcon>\n                                            <ListItemText primary={\"Статистика\"}/>\n                                        </ListItem>\n                                    </NavLink>\n                                    <NavLink to={'/change-password'} style={{color: \"black\"}}\n                                             activeStyle={{color: \"black\", fontWeight: \"bold\"}}>\n                                        <ListItem button>\n                                            <ListItemIcon><Icon>fingerprint</Icon></ListItemIcon>\n                                            <ListItemText primary={\"Изменить пароль\"}/>\n                                        </ListItem>\n                                    </NavLink>\n                                </List>\n                            </Drawer>\n\n                            {/*{ ТЕЛО ВСЕЙ СТРАНИЦЫ }*/}\n                            <main\n                                className={clsx(classes.content, {\n                                    [classes.contentShift]: open,\n                                })}\n                            >\n                                <div className={classes.drawerHeader}/>\n                                <Container>\n                                    <div style={{marginTop: '2rem'}}>\n                                        <div>\n                                            <Route exact path={'/blesk-nails'} component={() => <Timetable setConfirmed={setConfirmed} isConfirmed={confirmed}/>}/>\n                                        </div>\n                                        <div>\n                                            <Route exact path={'/statistic'} component={Statistic}/>\n                                        </div>\n                                        <div>\n                                            <Route exact path={'/change-password'} component={ChangePassPage}/>\n                                        </div>\n                                        <Redirect to=\"/blesk-nails\"/>\n                                    </div>\n                                </Container>\n                            </main>\n                        </div>\n                    </MuiThemeProvider>\n                </Switch>\n            ) : <LoginPage setConfirmed={setConfirmed}/>}\n        </>\n    )\n};\n\n","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {MainPage} from \"./components/MainPage\";\n\nconst App: React.FC = () => {\n  return (\n      <BrowserRouter>\n        <MainPage/>\n      </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}